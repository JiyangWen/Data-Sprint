## load data
data <- read.csv("./311_Customer_Service_Requests.csv")
## load data
data <- read.csv("./311_Customer_Service_Requests.csv", nrow = 1000)
View(data)
which(data$Neighborhood == "Fells Points")
## subsample data
data_sample <- data[c(4, 14, 123, 131),]
View(data_sample)
View(data)
View(data_sample)
dist_mat <- c(1)
dist <- matrix(NA, nrow(data_sample), nrow(data_sample))
rownames(dist) <- data_sample$SRRecordID
View(dist)
colnames(dist) <- data_sample$SRRecordID
View(dist)
View(data_sample)
data %>% filter(SRType == "SW-Dirty Alley")
library(tidyverse)
data %>% filter(SRType == "SW-Dirty Alley")
## load data
data <- read.csv("./311_Customer_Service_Requests.csv", nrow = 3000)
View(data)
"Dirty" %in% data$SRType
## subsample data
data_dirty <- data %>% filter(SRType == "SW-Dirty Alley")
View(data_dirty)
View(data_dirty)
## sample 4 rows of data
data_sample <- data_dirty[c(1, 6, 34, 59),]
View(data_sample)
dist <- matrix(NA, nrow(data_sample), nrow(data_sample))
rownames(dist) <- data_sample$SRRecordID
colnames(dist) <- data_sample$SRRecordID
dist <- matrix(NA, nrow(data_sample) + 1, nrow(data_sample) + 1)
rownames(dist) <- c("JHSPH", data_sample$SRRecordID)
colnames(dist) <- c("JHSPH", data_sample$SRRecordID)
View(dist)
View(data_sample)
View(dist)
data %>% filter(SRType == "SW-Dirty Alley")
c("JHSPH", data_sample$SRRecordID)
data_sample$SRRecordID
c("JHSPH", as.character(data_sample$SRRecordID))
dist[1, ] <-
dist[2, ] <- c(1.4, 0, 3.2, 4.0, 3.3)
dist[1, ] <- c(0, 1.4, 1.9, 2.7, 1.9)
dist[3, ] <- c(1.9, 3.2, 0, 0.9, 2.7)
dist[4, ] <- c(2.7, 4.0, 0.9, 0, 2.7)
dist[5, ] <- c(1.9, 3.3, 2.7, 2.7, 0)
View(dist)
rownames(dist) <- c("JHSPH", as.character(data_sample$SRRecordID))
colnames(dist) <- c("JHSPH", as.character(data_sample$SRRecordID))
View(dist)
save(data_sample, dist, file = "sample_data.rda")
rm()
rm(ls())
ls()
rm(list = ls())
load("~/Desktop/1st term/140.711.DS/homework/data_sprint/data_sprint/sample_data.rda")
View(data_sample)
View(dist)
View(data_sample)
View(dist)
load("~/Desktop/1st term/140.711.DS/homework/data_sprint/data_sprint/sample_data.rda")
View(data_sample)
View(dist)
library(shiny); runApp('sprint.R')
runApp('sprint.R')
library(shiny)
library(ggmap)
library(ggplot2)
register_google(key="AIzaSyALp7JBbp_TjgojSnQwphtuQ5BdgsM81lU")
# as.numeric(strptime("10/21/19 11:00:00", "%m/%d/%y %H:%M:%S") - dat$StatusDate[dat$SRRecordID == "5004M00000ZwN7rQAF"])
load("./sample_data.rda")
dist <- dist[c(1,5:2),c(1,5:2)]
dat <- readRDS("./dat.rds")
View(dat)
View(data_sample)
View(dist)
Origin <- as.data.frame(matrix(c("5004M00000ZwG4RQAV", "2019-10-16 15:45:22", 39.2980264, -76.5894243, "JHSPH"), nrow = 1))
View(Origin)
colnames(Origin) <- c("SRRecordID", "StatusDate", "Latitude", "Longitude", "ID")
dat <- rbind(dat, Origin)
dat$IS.Origin <- c(0,0,0,0,1)
View(dat)
score <- function(location, time, dist, w){
candi <- names(dist)
res <- numeric()
for (i in 1:length(candi)) {
time.dif <- as.numeric(difftime(time, dat$StatusDate[dat$SRRecordID == candi[i]], units="mins"))
dist.dif <- dist[candi[i]]
res[i] <- w*time.dif - (1-w)*dist.dif ## Key idea of greedy algorithm
}
names(res) <- candi
return(res)
}
runApp('sprint.R')
runApp('sprint.R')
runApp('sprint.R')
runApp('sprint.R')
runApp('sprint.R')
runApp('sprint.R')
runApp('sprint.R')
runApp('sprint.R')
as.character(IS.Origin)
View(dat)
runApp('sprint.R')
runApp('sprint.R')
runApp('sprint.R')
runApp('sprint.R')
runApp('sprint.R')
runApp('sprint.R')
runApp('sprint.R')
runApp('sprint.R')
runApp('sprint.R')
runApp('sprint.R')
runApp('sprint.R')
runApp('sprint.R')
runApp('sprint.R')
runApp('sprint.R')
runApp('sprint.R')
bal_map <- get_googlemap(center = c(lon = -76.6, lat = 39.3),
zoom = 13, scale = 2,
maptype ='satellite')
save(bal_map, file = "map.RData")
# bal_map <- get_googlemap(center = c(lon = -76.6, lat = 39.3),
#                          zoom = 13, scale = 2,
#                          maptype ='satellite')
# save(bal_map, file = "map.RData")
load(file = "./map.RData")
runApp('sprint.R')
runApp('sprint.R')
library(shiny)
library(ggmap)
library(ggplot2)
load("./sample_data.rda")
dist <- dist[c(1,5:2),c(1,5:2)]
dat <- readRDS("./dat.rds")
View(data_sample)
View(dist)
c(1,5:2),c(1,5:2)
c(1,5:2)
runApp('sprint.R')
runApp('sprint.R')
runApp('sprint.R')
runApp()
shiny::runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
## load data
data <- read.csv("./311_Customer_Service_Requests.csv", nrow = 3000)
View(data)
View(data)
write.csv(data, file = "311_Customer_Service_Requests_sample.csv")
library(tidyverse)
## load data
data <- read.csv("./311_Customer_Service_Requests_sample.csv", nrow = 3000)
## subsample data realted to litter
data_dirty <- data %>% filter(SRType == "SW-Dirty Alley")
## sample 4 rows of data
data_sample <- data_dirty[c(1, 6, 34, 59),]
## distance between each pair using google maps
dist <- matrix(NA, nrow(data_sample) + 1, nrow(data_sample) + 1)
rownames(dist) <- c("JHSPH", as.character(data_sample$SRRecordID))
colnames(dist) <- c("JHSPH", as.character(data_sample$SRRecordID))
dist[1, ] <- c(0, 1.4, 1.9, 2.7, 1.9)
dist[2, ] <- c(1.4, 0, 3.2, 4.0, 3.3)
dist[3, ] <- c(1.9, 3.2, 0, 0.9, 2.7)
dist[4, ] <- c(2.7, 4.0, 0.9, 0, 2.7)
dist[5, ] <- c(1.9, 3.3, 2.7, 2.7, 0)
View(data_dirty)
View(data_sample)
View(dist)
shiny::runApp()
## load R packages
library(shiny)
library(ggplot2)
library(ggmap)
## real data sample
load("./sample_data.rda")
dist <- dist[c(1,5:2),c(1,5:2)]
## select needed variables
dat <- readRDS("./dat.rds")
save(dat, data_sample, dist, file = "data_sample.RData")
## real data sample
# load("./sample_data.rda")
# dist <- dist[c(1,5:2),c(1,5:2)]
# ## select needed variables
# dat <- readRDS("./dat.rds")
load(file = "./data_sample.RData")
## baltimore map data (from Google Map API)
load(file = "./map.RData")
runApp()
## load data
data <- read.csv("./311_Customer_Service_Requests.csv", nrow = 3000)
View(data)
View(data)
